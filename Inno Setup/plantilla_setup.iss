; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "{{ nombre_soft }}"
#define MyAppVersion "{{ version }}"
#define MyAppPublisher "{{ compania }}"
#define MyAppURL "{{ web }}"
#define MyAppExeName "{{ nombre_soft + ".exe" }}"

{% raw -%}
[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{870E02B5-AB06-4325-8C64-B535A486D83C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
{% endraw -%}
AllowNoIcons=yes
LicenseFile={{ contrato_licencia }}
OutputBaseFilename={{ nombre_soft + " " + version }}
Compression=lzma/normal
SolidCompression=yes
WizardStyle=modern
VersionInfoCompany={{ compania }}
VersionInfoDescription={{ descripcion }}
VersionInfoCopyright={{ compania }}
VersionInfoProductName={{ nombre_soft }}
VersionInfoProductVersion={{ version }}
ArchitecturesInstallIn64BitMode=x64
WizardImageFile="Banner.bmp"
WizardSmallImageFile="Banner-chico.bmp"
DisableWelcomePage=False
SetupIconFile={{ icono_zonda }}

[Languages]
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: {{ carpeta_exe }}\*; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: {{ instalador_pandoc }}; DestDir: {% raw %}"{%TEMP}"{% endraw %};
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

{% raw %}
[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon
{% endraw -%}


{% raw %}
[Code]

{ ///////////////////////////////////////////////////////////////////// }
function GetUninstallString(): String;
var
  sUnInstPath: String;
  sUnInstallString: String;
begin
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppId")}_is1');
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;


{ ///////////////////////////////////////////////////////////////////// }
function IsUpgrade(): Boolean;
begin
  Result := (GetUninstallString() <> '');
end;


{ ///////////////////////////////////////////////////////////////////// }
function UnInstallOldVersion(): Integer;
var
  sUnInstallString: String;
  iResultCode: Integer;
begin
{ Return Values: }
{ 1 - uninstall string is empty }
{ 2 - error executing the UnInstallString }
{ 3 - successfully executed the UnInstallString }

  { default return value }
  Result := 0;

  { get the uninstall string of the old app }
  sUnInstallString := GetUninstallString();
  if sUnInstallString <> '' then begin
    sUnInstallString := RemoveQuotes(sUnInstallString);
    if Exec(sUnInstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES','', SW_HIDE, ewWaitUntilTerminated, iResultCode) then
      Result := 3
    else
      Result := 2;
  end else
    Result := 1;
end;

{ ///////////////////////////////////////////////////////////////////// }
procedure CurStepChanged(CurStep: TSetupStep);
begin
  if (CurStep=ssInstall) then
  begin
    if (IsUpgrade()) then
    begin
      UnInstallOldVersion();
    end;
  end;
end;
{% endraw %}

[Run]
Filename: "msiexec.exe"; Description: "Instalar Pandoc (Se requiere para generar los reportes)"; Parameters: "/i ""{% raw %}{%TEMP}{% endraw %}\{{ instalador_pandoc }}"""; StatusMsg: Instalando Pandoc...; Flags: nowait postinstall
